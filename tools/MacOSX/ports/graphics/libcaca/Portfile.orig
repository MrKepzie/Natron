# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 144505 2016-01-10 17:10:42Z khindenburg@macports.org $

PortSystem          1.0

name                libcaca
version             0.99.beta19
revision            4
categories          graphics
license             WTFPL-2 LGPL-2+
maintainers         nomaintainer

description         Colour AsCii Art library
long_description    \
    The libcaca library is a graphics library that outputs text \
    instead of pixels, so that it can work on older video cards \
    or text terminals. It is not unlike the famous AAlib library.

homepage            http://libcaca.zoy.org/wiki/libcaca
platforms           darwin
depends_build       port:pkgconfig
depends_lib         port:ncurses
master_sites        http://caca.zoy.org/files/libcaca/
#master_sites       http://libcaca.zoy.org/raw-attachment/wiki/libcaca/

checksums           md5     a3d4441cdef488099f4a92f4c6c1da00 \
                    sha1    ed138f3717648692113145b99a80511178548010 \
                    rmd160  8623dbfe2584d6e5c633aa140f30139a13a59128 \
                    sha256  128b467c4ed03264c187405172a4e83049342cc8cc2f655f53a2d0ee9d3772f4

# Teach glibtool about -stdlib=libc++
use_autoreconf      yes
autoreconf.args     -fvi

configure.args      --mandir=${prefix}/share/man \
                    --disable-win32 --disable-conio --disable-slang \
                    --disable-imlib2 --disable-doc \
                    --disable-x11 --enable-ncurses --enable-imlib2 \
                    --disable-ruby --disable-csharp

# Disable silent rules
build.args-append   V=1

variant	x11 {
    depends_lib-append  port:imlib2 \
                        port:freeglut \
                        port:libGLU \
                        port:xorg-libX11

	configure.args-delete   --disable-x11
	configure.args-append	--enable-x11 \
	                        --x-includes=${prefix}/include \
	                        --x-libraries=${prefix}/lib 
}

compiler.blacklist  llvm-gcc-4.2

test.run            yes
test.target         check

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)\\.beta(?:\\d+)*)${extract.suffix}"
