--- opencolorio/CMakeLists.txt.orig	2014-07-08 10:14:15.345200000 +0400
+++ opencolorio/CMakeLists.txt	2014-07-08 10:15:13.408400000 +0400
@@ -145,12 +145,16 @@
 else()
     # Find Python, used for (possibly) building pyglue, and now to
     # construct the external project path
-    OCIOFindPython()
+    find_package(PythonInterp)
+    if(PYTHONINTERP_FOUND)
+        set(PYTHON_OK YES)
+    endif()
 
     set(EXTDIST_ROOT ${CMAKE_BINARY_DIR}/ext/dist)
     set(EXTDIST_BINPATH ${EXTDIST_ROOT}/bin)
     if(PYTHON_OK)
-        set(EXTDIST_PYTHONPATH ${EXTDIST_ROOT}/lib/python${PYTHON_VERSION}/site-packages)
+        set(EXTDIST_PYTHONPATH ${EXTDIST_ROOT}/lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/site-packages)
+        set(PYTHON_VARIANT_PATH "lib/python${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}/site-packages")
         set(PYTHONPATH ${EXTDIST_PYTHONPATH}:$ENV{PYTHONPATH})
     endif()
 endif()
--- opencolorio/src/pyglue/CMakeLists.txt.orig	2014-07-08 10:14:15.345200000 +0400
+++ opencolorio/src/pyglue/CMakeLists.txt	2014-07-08 10:15:13.408400000 +0400
@@ -13,7 +13,7 @@
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-strict-aliasing -Wno-missing-field-initializers")
 endif()
 
-if(NOT WIN32)
+if(NOT WIN32 OR MINGW)
     find_package(PythonLibs)
     if(NOT PYTHONLIBS_FOUND)
         message(FATAL "Python libraries were not found, exiting.")
@@ -53,7 +53,7 @@
     )
 endif()
 
-if(WIN32)
+if(WIN32 AND NOT MINGW)
     if(OCIO_PYGLUE_LINK)
     target_link_libraries(PyOpenColorIO OpenColorIO
         debug ${PYTHON_LIB}/python26_d.lib
@@ -62,10 +62,12 @@
     target_link_libraries(PyOpenColorIO OpenColorIO)
     endif(OCIO_PYGLUE_LINK)
 else()
+    set_target_properties(PyOpenColorIO PROPERTIES SUFFIX ".pyd")
     if(OCIO_PYGLUE_LINK)
         message(STATUS "Linking python bindings against: ${PYTHON_LIBRARY}")
         message(STATUS "Python library dirs: ${PYTHON_LIBRARY_DIRS}")
         link_directories(${PYTHON_LIBRARY})
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I${PYTHON_INCLUDE_DIR}")
         target_link_libraries(PyOpenColorIO OpenColorIO
             ${PYTHON_LIBRARIES})
     else()
